{% style %}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
  .page__title {
    text-align: {{ section.settings.title_alignment }};
  }
{% endstyle %}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="section-{{ section.id }}-padding">
    <div class="container ">
      <header class="page__header row">
        <h1 class="page__title heading h1 col-12">{{ page.title }}</h1>
      </header>

      <div class="page__content rte">
        {{ page.content }}
        <div class="form__input-row row mt-5 mb-4" id="form_input_stuff">
          <div class="form__input-wrapper col-12 col-md-4 mb-4 mb-md-0">
            <div class="select-wrapper select-wrapper--primary">
              <select
                name="marca"
                id="marcadocarro"
                class="configurador-input"
                data-default=""
                required=""
                onChange="brandChanged(event)"
              >
                <option value="">Marca do Veículo</option>
              </select>
            </div>
          </div>

          <div class="form__input-wrapper col-12 col-md-4 mb-4 mb-md-0" style="display: block;">
            <div class="select-wrapper select-wrapper--primary">
              <select
                name="modelo"
                id="modelodocarro"
                class="configurador-input"
                data-default=""
                onChange="modelChanged(event)"
              >
                <option value="">Modelo do Veículo</option>
              </select>
            </div>
          </div>

          <div class="form__input-wrapper col-12 col-md-4" style="display: block;">
            <div class="select-wrapper select-wrapper--primary">
              <select
                name="ano"
                id="anodocarro"
                class="configurador-input"
                data-default=""
                onChange="yearChanged(event)"
              >
                <option value="">Ano do Veículo</option>
              </select>
            </div>
          </div>

          <div class="shipping-estimator__results" style="display: none;"></div>
        </div>

        <div hidden id="optionClassic">
          <div class="card card-configurador mb-4" id="btoptions">
            <div class="card_header" id="op1">
              <h2 class="card_title heading h3 mb-4 mb-lg-0" style="">Opção Escovas Classic</h2>
            </div>

            <div
              id="opt1"
              class="card_section btoption row justify-content-evenly align-items-center flex-column flex-lg-row"
              style="padding: 0px 20px 30px 20px;"
            >
              <img class="btoptioni col-12 col-lg-3" src="img0101" height="" width="">
              <div class="btoptiont col-12 col-lg-7">
                <table style="" class="tabbt">
                  <thead>
                    <tr valign="top">
                      <th style="width: 325px;"><b>Lado do Condutor</b></th>
                      <th style="width: 85px; text-align: center;"><b>SKU</b></th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td label="Acessórios">nome0</td>
                      <td label="Referência">
                        <p style="text-align:center">
                          <a
                            target="_blank"
                            href="/search?type=product&options[prefix]=last&options[unavailable_products]=last&q=skuskusku0"
                            >skuskusku0</a
                          >
                        </p>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        Inclui adaptador universal para aplicação
                        {% comment %}
                          Inclui o adaptador UFGC0 para aplicação
                          <br>
                          <img src="UFGI0" height="" width="">
                        {% endcomment %}
                      </td>
                      <td></td>
                    </tr>
                  </tbody>
                </table>
              </div>
              <div class="btoptionprice col-12 col-lg-2">
                <div class="btbox2">
                  <p style="margin-top:20px;">
                    <span class="fw-bold">Preço:</span><span class="btprice fw-bold" style=""> price1231230</span>
                  </p>
                  <div style="text-align: center;">
                    <button
                      type="submit"
                      class="product-form__add-button button button--primary button-configurador"
                      data-action="add-to-cart"
                      style="height:50px; font-size:14px;"
                      onclick="handleBuy(0)"
                    >
                      BUY1
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <div
              id="opt2"
              class="card_section btoption row justify-content-evenly align-items-center"
              style="padding: 0px 20px 30px 20px;"
            >
              <img class="btoptioni col-12 col-lg-3" src="img0102" height="" width="">
              <div class="btoptiont col-12 col-lg-7">
                <table style="" class="tabbt">
                  <thead>
                    <tr valign="top">
                      <th style="width: 325px;"><b>Lado do Passageiro</b></th>
                      <th style="width: 85px; text-align: center;"><b>SKU</b></th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr style="padding-top: 10px">
                      <td label="Acessórios">nome1</td>
                      <td label="Referência">
                        <p style="text-align:center">
                          <a
                            target="_blank"
                            href="/search?type=product&options[prefix]=last&options[unavailable_products]=last&q=skuskusku1"
                            >skuskusku1</a
                          >
                        </p>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        Inclui adaptador universal para aplicação
                        {% comment %}
                          Inclui o adaptador UFGC0 para aplicação
                          <br>
                          <img src="UFGI0" height="" width="">
                        {% endcomment %}
                      </td>
                      <td style="text-align: center;"></td>
                    </tr>
                  </tbody>
                </table>
              </div>
              <div class="btoptionprice col-12 col-lg-2">
                <div class="btbox2">
                  <p style="margin-top:20px;">
                    <span class="fw-bold">Preço:</span><span class="btprice fw-bold" style=""> price1231231</span>
                  </p>
                  <div style="text-align: center;">
                    <button
                      type="submit"
                      class="product-form__add-button button button--primary button-configurador"
                      data-action="add-to-cart"
                      style="height:50px; font-size:14px;"
                      onclick="handleBuy(1)"
                    >
                      BUY2
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div hidden id="optionFlat">
          <div class="card card-configurador" id="btoptions">
            <div class="card_header" id="op2">
              <h2 class="card_title heading h3 mb-4 mb-lg-0" style="margin-bottom: 0px;">Opção Escovas Flat</h2>
            </div>
            <div
              id="opt3"
              class="card_section btoption row justify-content-evenly"
              style="padding: 0px 20px 30px 20px;"
            >
              <img class="btoptioni col-12 col-lg-3" src="img0101" height="" width="">
              <div class="btoptiont col-12 col-lg-7">
                <table style="" class="tabbt">
                  <thead>
                    <tr valign="top">
                      <th style="width: 325px;"><b>Lado do Condutor</b></th>
                      <th style="width: 85px; text-align: center;"><b>SKU</b></th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr style="padding-top: 10px">
                      <td label="Acessórios">nome0</td>
                      <td label="Referência">
                        <p style="text-align:center">
                          <a
                            target="_blank"
                            href="/search?type=product&options[prefix]=last&options[unavailable_products]=last&q=skuskusku0"
                            >skuskusku0</a
                          >
                        </p>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        Inclui o adaptador UFGC0 para aplicação<br>
                        <img src="UFGI0" height="" width="">
                      </td>
                      <td></td>
                    </tr>
                  </tbody>
                </table>
              </div>
              <div class="btoptionprice col-12 col-lg-2">
                <div class="btbox2">
                  <p style="margin-top:20px;">
                    <span class="fw-bold">Preço:</span><span class="btprice fw-bold" style=""> price1231230</span>
                  </p>
                  <div style="text-align: center;">
                    <button
                      type="submit"
                      class="product-form__add-button button button--primary button-configurador"
                      data-action="add-to-cart"
                      style="height:50px; font-size:14px;"
                      onclick="handleBuy(2)"
                    >
                      BUY1
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <div
              id="opt4"
              class="card_section btoption row justify-content-evenly"
              style="padding: 0px 20px 30px 20px;"
            >
              <img class="btoptioni col-12 col-lg-3" src="img0102" height="" width="">
              <div class="btoptiont col-12 col-lg-7">
                <table style="" class="tabbt">
                  <thead>
                    <tr valign="top">
                      <th style="width: 325px;"><b>Lado do Passageiro</b></th>
                      <th style="width: 85px; text-align: center;"><b>SKU</b></th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr style="padding-top: 10px">
                      <td label="Acessórios">nome1</td>
                      <td label="Referência">
                        <p style="text-align:center">
                          <a
                            target="_blank"
                            href="/search?type=product&options[prefix]=last&options[unavailable_products]=last&q=skuskusku1"
                            >skuskusku1</a
                          >
                        </p>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        Inclui o adaptador UFGC1 para aplicação<br>
                        <img src="UFGI1" height="" width="">
                      </td>
                      <td></td>
                    </tr>
                  </tbody>
                </table>
              </div>
              <div class="btoptionprice col-12 col-lg-2">
                <div class="btbox2">
                  <p style="margin-top:20px;">
                    <span class="fw-bold">Preço:</span><span class="btprice fw-bold" style=""> price1231231</span>
                  </p>
                  <div style="text-align: center;">
                    <button
                      type="submit"
                      class="product-form__add-button button button--primary button-configurador"
                      data-action="add-to-cart"
                      style="height:50px; font-size:14px;"
                      onclick="handleBuy(3)"
                    >
                      BUY2
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div id="see-price-info" style="display: none">
          {% render 'see-price-info' %}
        </div>
      </div>
      <div class="no-products-found card card-configurador">
        <p>Infelizmente, neste momento não comercializamos escovas para este modelo.</p>
      </div>
    </div>
  </div>
</div>

<script>
  const infoNoProducts = document.querySelector(".no-products-found");
  infoNoProducts.style.display = "none";

  var loading = true;
  var cars;
  var selectedBrand;
  var selectedModel;
  var selectedYear;
  var initialClassic;
  var initialFlat;

  var brandToId;
  var idToBrand;

  var modelToId;
  var idToModel;

  var yearToId;
  var idToYear;

  var opts;
  var adapt;
  doMagic();
  function brandChanged(event) {
    infoNoProducts.style.display = "none";

    const model = document.getElementById('modelodocarro');
    while (model.length > 1) {
      model.remove(1);
    }
    const year = document.getElementById('anodocarro');
    while (year.length > 1) {
      year.remove(1);
    }
    modelToId = {};
    idToModel = {};
    if (cars !== undefined) {
      const sel = cars[event.target.value];
      selectedBrand = event.target.value;
      const url = new URLSearchParams(document.location.search);

      Object.keys(sel).forEach((car, index) => {
        const opt = document.createElement('option');

        // Add index to option_elem
        opt.value = car;

        // Add element HTML
        opt.textContent = car;
        if (index === Number(url.get('model')) && url.get('model') !== null && loading) {
          opt.selected = true;
        }
        modelToId[car] = index;
        idToModel[index] = car;

        // Append option_elem to select_elem
        model.appendChild(opt);
      });
    }
    document.getElementById('optionClassic').outerHTML = initialClassic;
    document.getElementById('optionFlat').outerHTML = initialFlat;

    // Inicializar popover manualmente por ser injetado via JS
    document.querySelectorAll('#optionClassic [data-bs-toggle="popover"], ' + '#optionFlat   [data-bs-toggle="popover"]')
      .forEach(el => new bootstrap.Popover(el));
  }

  function modelChanged(event) {
    infoNoProducts.style.display = "none";

    const year = document.getElementById('anodocarro');
    while (year.length > 1) {
      year.remove(1);
    }
    if (cars !== undefined) {
      selectedModel = event.target.value;
      const sel = cars[selectedBrand][event.target.value];
      const url = new URLSearchParams(document.location.search);
      yearToId = {};
      idToYear = {};

      Object.keys(sel).forEach((car, index) => {
        const opt = document.createElement('option');

        // Add index to option_elem
        opt.value = car;

        // Add element HTML
        opt.textContent = car;

        if (index === Number(url.get('year')) && url.get('year') !== null && loading) {
          opt.selected = true;
        }
        yearToId[car] = index;
        idToYear[index] = car;

        // Append option_elem to select_elem
        year.appendChild(opt);
      });
    }
    document.getElementById('optionClassic').outerHTML = initialClassic;
    document.getElementById('optionFlat').outerHTML = initialFlat;

    // Inicializar popover manualmente por ser injetado via JS
    document.querySelectorAll('#optionClassic [data-bs-toggle="popover"], ' + '#optionFlat   [data-bs-toggle="popover"]')
      .forEach(el => new bootstrap.Popover(el));
  }
  async function yearChanged(event) {
    selectedYear = event.target.value;
    const car = cars[selectedBrand][selectedModel][selectedYear];
    const requests = { whatIs: [], p: [], image: [] };
    const priceInfoPopoverHTML = document.getElementById("see-price-info").innerHTML;

    if (car[3] || car[4]) {
      if (car[3]) {
        requests.whatIs.push(['classic', 'primary']);
        requests.p.push(getProduct(car[3]));
        requests.image.push(car[5]);
      }
      if (car[4]) {
        requests.whatIs.push(['classic', 'secondary']);
        requests.p.push(getProduct(car[4]));
        requests.image.push(car[5]);
      }
    }

    if (car[6] || car[7]) {
      if (car[6]) {
        requests.whatIs.push(['flat', 'primary']);
        requests.p.push(getProduct(car[6]));
        requests.image.push(car[8]);
      }
      if (car[7]) {
        requests.whatIs.push(['flat', 'secondary']);
        requests.p.push(getProduct(car[7]));
        requests.image.push(car[8]);
      }
    }
    const safe = requests.p.map(p => p.catch(_=>null));
    const ans = await Promise.all(safe);

    // Organizar as respostas por tipo usando whatIs
    const classicProducts = { primary: null, secondary: null };
    const flatProducts = { primary: null, secondary: null };

    ans.forEach((product, index) => {
      if (product) {
        const [type, position] = requests.whatIs[index];
        if (type === 'classic') {
          classicProducts[position] = product;
        } else if (type === 'flat') {
          flatProducts[position] = product;
        }
      }
    });

    let classicPage = initialClassic;
    let flatPage = initialFlat;
    opts = [];

    // Processar escovas clássicas
    const hasClassicProducts = classicProducts.primary || classicProducts.secondary;

    if (hasClassicProducts) {
      // Lado do condutor (primary)
      if (classicProducts.primary) {
        const vari = classicProducts.primary.variants;
        const priceReplacement = !window.customerLoggedIn ?
          priceInfoPopoverHTML :
          (Number(classicProducts.primary.price) / 100).toFixed(2) + '€';

        classicPage = classicPage
          .replace('img0101', classicProducts.primary.featured_image || 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300')
          .replace('nome0', classicProducts.primary.title)
          .replace(/skuskusku0/g, vari[0].sku)
          .replace('price1231230', priceReplacement);

        if (!classicProducts.primary.available) {
          classicPage = classicPage.replace('BUY1', 'ESGOTADO');
        } else {
          classicPage = classicPage.replace('BUY1', 'ADICIONAR');
        }
        opts[0] = vari[0].id;
      } else {
        classicPage = classicPage.replace('id="opt1"', 'style="display:none;" id="opt1"');
      }

      // Lado do passageiro (secondary)
      if (classicProducts.secondary) {
        const vari = classicProducts.secondary.variants;
        const priceReplacement = !window.customerLoggedIn ?
          priceInfoPopoverHTML :
          (Number(classicProducts.secondary.price) / 100).toFixed(2) + '€';

        classicPage = classicPage
          .replace('img0102', classicProducts.secondary.featured_image || 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300')
          .replace('nome1', classicProducts.secondary.title)
          .replace(/skuskusku1/g, vari[0].sku)
          .replace('price1231231', priceReplacement);

        if (!classicProducts.secondary.available) {
          classicPage = classicPage.replace('BUY2', 'ESGOTADO');
        } else {
          classicPage = classicPage.replace('BUY2', 'ADICIONAR');
        }
        opts[1] = vari[0].id;
      } else {
        classicPage = classicPage.replace('id="opt2"', 'style="display:none;" id="opt2"');
      }

      // Mostrar a div de escovas clássicas
      classicPage = classicPage.replace('hidden=""', '');
    }

    // Processar escovas flat
    const hasFlatProducts = flatProducts.primary || flatProducts.secondary;

    if (hasFlatProducts) {
      // Lado do condutor (primary)
      if (flatProducts.primary) {
        const vari = flatProducts.primary.variants[0];
        const priceReplacement = !window.customerLoggedIn ?
          priceInfoPopoverHTML :
          (Number(flatProducts.primary.price) / 100).toFixed(2) + '€';

        flatPage = flatPage
          .replace('img0101', flatProducts.primary.featured_image || 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300')
          .replace('nome0', flatProducts.primary.title)
          .replace(/skuskusku0/g, vari.sku)
          .replace('price1231230', priceReplacement);

        // Encontrar a imagem correspondente nos requests
        const primaryFlatImageIndex = requests.whatIs.findIndex(([type, pos]) => type === 'flat' && pos === 'primary');
        if (primaryFlatImageIndex !== -1) {
          flatPage = flatPage
            .replace('UFGC0', requests.image[primaryFlatImageIndex])
            .replace('UFGI0', adapt[requests.image[primaryFlatImageIndex]] || 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300');
        }

        if (!flatProducts.primary.available) {
          flatPage = flatPage.replace('BUY1', 'ESGOTADO');
        } else {
          flatPage = flatPage.replace('BUY1', 'ADICIONAR');
        }
        opts[2] = vari.id;
      } else {
        flatPage = flatPage.replace('id="opt3"', 'style="display:none;" id="opt3"');
      }

      // Lado do passageiro (secondary)
      if (flatProducts.secondary) {
        const vari = flatProducts.secondary.variants[0];
        const priceReplacement = !window.customerLoggedIn ?
          priceInfoPopoverHTML :
          (Number(flatProducts.secondary.price) / 100).toFixed(2) + '€';

        flatPage = flatPage
          .replace('img0102', flatProducts.secondary.featured_image || 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300')
          .replace('nome1', flatProducts.secondary.title)
          .replace(/skuskusku1/g, vari.sku)
          .replace('price1231231', priceReplacement);

        // Encontrar a imagem correspondente nos requests
        const secondaryFlatImageIndex = requests.whatIs.findIndex(([type, pos]) => type === 'flat' && pos === 'secondary');
        if (secondaryFlatImageIndex !== -1) {
          flatPage = flatPage
            .replace('UFGC1', requests.image[secondaryFlatImageIndex])
            .replace('UFGI1', adapt[requests.image[secondaryFlatImageIndex]] || 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300');
        }

        if (!flatProducts.secondary.available) {
          flatPage = flatPage.replace('BUY2', 'ESGOTADO');
        } else {
          flatPage = flatPage.replace('BUY2', 'ADICIONAR');
        }
        opts[3] = vari.id;
      } else {
        flatPage = flatPage.replace('id="opt4"', 'style="display:none;" id="opt4"');
      }

      // Mostrar a div de escovas flat
      flatPage = flatPage.replace('hidden=""', '');
    }

    // Atualizar o DOM
    document.getElementById('optionClassic').outerHTML = classicPage;
    document.getElementById('optionFlat').outerHTML = flatPage;

    if (!hasClassicProducts && !hasFlatProducts) {
      console.log("Sem produtos");
      infoNoProducts.style.removeProperty("display");
    }

    // Inicializar popovers
    document.querySelectorAll('#optionClassic [data-bs-toggle="popover"], #optionFlat [data-bs-toggle="popover"]')
      .forEach(el => new bootstrap.Popover(el));

    // Calcular preços e ordenar
    const classicTotalPrice = (classicProducts.primary ? Number(classicProducts.primary.price) : 0) +
                             (classicProducts.secondary ? Number(classicProducts.secondary.price) : 0);
    const flatTotalPrice = (flatProducts.primary ? Number(flatProducts.primary.price) : 0) +
                          (flatProducts.secondary ? Number(flatProducts.secondary.price) : 0);

    // Só ordenar se ambos os tipos existirem
    if (hasClassicProducts && hasFlatProducts) {
      setFirstChild(classicTotalPrice <= flatTotalPrice);
    }

    // Ordenar dentro de cada categoria
    if (hasClassicProducts && classicProducts.primary && classicProducts.secondary) {
      const primaryPrice = Number(classicProducts.primary.price);
      const secondaryPrice = Number(classicProducts.secondary.price);
      setFirstChildEach('op1', primaryPrice <= secondaryPrice ? 'opt1' : 'opt2');
    }

    if (hasFlatProducts && flatProducts.primary && flatProducts.secondary) {
      const primaryPrice = Number(flatProducts.primary.price);
      const secondaryPrice = Number(flatProducts.secondary.price);
      setFirstChildEach('op2', primaryPrice <= secondaryPrice ? 'opt3' : 'opt4');
    }
  }

  function getProduct(sku) {
    return new Promise((resolve, reject) => {
      let request = new XMLHttpRequest();
      request.open('GET', '/products/' + sku.split('|')[0] + '.js', false);
      request.send(null);
      if (request.status === 200) {
        const ans = JSON.parse(request.responseText);
        ans.vari = ans.variants.find((v) => v.sku === sku.split('|')[1]);
        resolve(ans);
      } else {
        reject(request.status);
      }
    });
  }
  function handleBuy(id) {
    console.log(id);
    const requestEntrie = [
      {
        id: opts[id],
        quantity: 1,
      },
    ];

    const request = new XMLHttpRequest();
    request.open('POST', '/cart/add.js'); // , false
    request.setRequestHeader('Content-Type', 'application/json');
    request.addEventListener('load', reqListener);
    request.send(JSON.stringify({ items: requestEntrie }));
  }
  function reqListener(env) {
    if (this.status !== 200) {
      alert('Artigo Esgotado');
    } else {
      const a =
        window.location.href.split('?')[0] +
        '?brand=' +
        brandToId[selectedBrand] +
        '&model=' +
        modelToId[selectedModel] +
        '&year=' +
        yearToId[selectedYear];
      window.location.href = a;
    }
  }
  function doMagic() {
    httpGet("{{ 'limpaAdapter.csv' | asset_url }}", handleDataAdapter);
    httpGet("{{ 'outputLimpa.csv' | asset_url }}", handleData);
  }
  async function httpGet(URL, handler) {
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.addEventListener('load', handler);
    xmlHttp.open('GET', URL);

    xmlHttp.send(null);
  }
  function handleData() {
    const r = this.responseText.split('\n').map((line) => line.split(',').map((value) => value.trim()));
    const ccars = {};
    for (let i = 1; i < r.length; i++) {
      const carr = r[i];
      if (carr[0] === '') continue;
      if (ccars[carr[0]] === undefined) {
        ccars[carr[0]] = {};
      }
      if (ccars[carr[0]][carr[1]] === undefined) {
        ccars[carr[0]][carr[1]] = {};
      }
      if (ccars[carr[0]][carr[1]][carr[2]] === undefined) {
        ccars[carr[0]][carr[1]][carr[2]] = carr;
      }
    }
    cars = ccars;
    const select_elem = document.getElementById('marcadocarro');
    const url = new URLSearchParams(document.location.search);
    brandToId = {};
    idToBrand = {};

    Object.keys(cars).forEach((element, index) => {
      const option_elem = document.createElement('option');

      // Add index to option_elem
      option_elem.value = element;

      // Add element HTML
      option_elem.textContent = element;

      if (Number(url.get('brand')) === index && url.get('brand') !== null && loading) {
        option_elem.selected = true;
      }
      brandToId[element] = index;
      idToBrand[index] = element;

      // Append option_elem to select_elem
      select_elem.appendChild(option_elem);
    });

    initialClassic = document.getElementById('optionClassic').outerHTML;
    initialFlat = document.getElementById('optionFlat').outerHTML;

    if (url.get('brand')) {
      brandChanged({ target: { value: idToBrand[url.get('brand')] } });
      modelChanged({ target: { value: idToModel[url.get('model')] } });
      yearChanged({ target: { value: idToYear[url.get('year')] } });
    }
    loading = false;
  }
  function handleDataAdapter() {
    const r = this.responseText.split('\n').map((line) => line.split(',').map((value) => value.trim()));
    const translator = {};
    for (let i = 1; i < r.length; i++) {
      const adapter = r[i];
      if (adapter[0] === '') continue;
      translator[adapter[0]] = adapter[1];
    }
    adapt = translator;
  }
  function setFirstChild(classicTop = true) {
    const topElement = classicTop ? document.getElementById('optionClassic') : document.getElementById('optionFlat');

    const parent = topElement.parentNode;
    parent.insertBefore(topElement, parent.firstChild);

    const a = document.getElementById('form_input_stuff');
    const parent2 = a.parentNode;
    parent2.insertBefore(a, parent2.firstChild);
  }
  function setFirstChildEach(first, second) {
    const topElement = document.getElementById(second);

    const parent = topElement.parentNode;
    parent.insertBefore(topElement, parent.firstChild);

    const a = document.getElementById(first);
    const parent2 = a.parentNode;
    parent2.insertBefore(a, parent2.firstChild);
  }
</script>

{% schema %}
{
  "name": "Configurador de Escovas",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-5"
    },
    {
      "type": "select",
      "id": "title_alignment",
      "label": "Title alignment",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        },
        {
          "label": "Right",
          "value": "right"
        }
      ],
      "default": "left"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "presets": [
    {
      "name": "Configurador de Escovas"
    }
  ]
}
{% endschema %}
