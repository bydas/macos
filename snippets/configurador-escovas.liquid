<div class="container">
  <div class="row">
    <div class="col-12">
      <h1 class="custom-cruz-padding page-title">Configurador de Escovas Limpa PÃ¡ra-brisas</h1>
      <div class="col-12">
        
        <hr>
        
        <div class="products-search-layout">
          <div>
            <label for="cars">Escolha uma marca:</label>
            <select name="brands" id="brands"></select>
          </div>
          <div style="margin-top: 24px">
            <label for="models">Escolha um modelo:</label>
            <select name="models" id="models"></select>
          </div>
          <div style="margin-top: 24px">
            <label for="vehicles">Escolha um ano:</label>
            <select name="vehicles" id="vehicles"></select>
          </div>
        </div>
          
        <div id="loading">
          A carregar...
        </div>
    
        <div id="product-list-container">
    
            <div id="products-list-2">
            </div>
          </div>
      </div>
    </div>
  </div>

  <div id="components"></div>
</div>


<script>
  
  const brands = {} 
  const allBrands = []
  let skusInfo = {} // Make skusInfo globally accessible

  // Function to fetch product by SKU using Shopify Storefront API
  async function getProductBySKU(sku) {
    const query = `
      query getProductBySKU($sku: String!) {
        products(first: 1, query: $sku) {
          edges {
            node {
              id
              title
              handle
              featuredImage {
                url
              }
              variants(first: 1) {
                edges {
                  node {
                    id
                    sku
                    price {
                      amount
                      currencyCode
                    }
                  }
                }
              }
            }
          }
        }
      }
    `;

    try {
      const response = await fetch(`${ENDPOINT}/api/2024-01/graphql.json`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-Shopify-Storefront-Access-Token": ACCESS_TOKEN
        },
        body: JSON.stringify({ query, variables: { sku } })
      });

      const data = await response.json();

      if (data.errors) {
        console.error("GraphQL Errors:", data.errors);
        return null;
      }

      return data.data.products.edges;
    } catch (error) {
      console.error("Error fetching product:", error);
      return null;
    }
  }

  $( document ).ready(async function() {
    try {
      // Load both JSON files in parallel
      const [skuResponse, dataResponse] = await Promise.all([
        $.getJSON("{{ 'escova.json' | asset_url }}"),
        $.getJSON("{{ 'escova2.json' | asset_url }}")
      ]);

      // Process SKU data
      if (Array.isArray(skuResponse)) {
        skuResponse.forEach((data) => {
          if (data.SKU) {
            skusInfo[data.SKU] = data;
          }
        });
      }

      // Process brand data
      $('#brands').append($('<option>', { value: -1, text : "Selecione uma marca" }));

      if (dataResponse && dataResponse) {
        dataResponse.forEach((entry) => {
          if(!brands[entry["MARCA"]]){
            brands[entry["MARCA"]] = {}
          }
          if(!brands[entry["MARCA"]][entry["MODELO"]]) {
            brands[entry["MARCA"]][entry["MODELO"]] = {}
          }
          if(!brands[entry["MARCA"]][entry["MODELO"]][entry["ANO"]]) {
            brands[entry["MARCA"]][entry["MODELO"]][entry["ANO"]] = []
          }
          brands[entry["MARCA"]][entry["MODELO"]][entry["ANO"]].push(entry)

          if(!allBrands.includes(entry["MARCA"])){
            allBrands.push(entry["MARCA"])
            $('#brands').append($('<option>', { 
              value: entry["MARCA"],
              text : entry["MARCA"] 
            }));
          }
        });
      }

    } catch (error) {
      console.error("Error loading data:", error);
      $("#loading").html("Erro ao carregar os dados. Por favor, tente novamente.");
    }

    $( "#brands" ).on( "change", function() {
      const model = $( "#brands" ).val()

      $("#products-list-2 .product-item").remove()
      $("#product-list-container").css("display", "none");

      $('#models').find('option').remove().end()
      $('#vehicles').find('option').remove().end()

      $('#models').append($('<option>', { value: -1, text : "Selecione um modelo" }));

      const models = brands[model]

      Object.keys(models).map((model) => {
          $('#models').append($('<option>', { 
            value: model,
            text : model 
          }));
      })

    });

    $( "#models" ).on( "change", function() {
      const brandSelected = $( "#brands" ).val()
      const modelSelected = $( "#models" ).val()

      $("#products-list-2 .product-item").remove()
      $("#product-list-container").css("display", "none");

      $('#vehicles').find('option').remove().end()

      $('#vehicles').append($('<option>', { value: -1, text : "Selecione um ano" }));

      
      const years = brands[brandSelected][modelSelected]

      Object.keys(years).map((year) => {
          $('#vehicles').append($('<option>', { 
            value: year,
            text : year 
          }));
      })
    })

    $( "#vehicles" ).on( "change", async function() {
      $( "#loading" ).show()

      const brandSelected = $( "#brands" ).val()
      const modelSelected = $( "#models" ).val()
      const vehicleSelcted = $( "#vehicles" ).val()
    
      const vehiclesList = $("#products-list-2")
      vehiclesList.empty()
      $("#products-list-2 .product-item").remove()

      const vehicle = brands[brandSelected][modelSelected][vehicleSelcted][0]

      // Fetch product data for all available SKUs
      const skus = [
        vehicle["ESCOVA CLASSIC CONDUTOR"],
        vehicle["ESCOVA CLASSIC PASSAGEIRO"],
        vehicle["ESCOVA FLAT CONDUTOR"],
        vehicle["ESCOVA FLAT PASSAGEIRO"]
      ].filter(Boolean); // Remove any null/undefined values

      const productPromises = skus.map(sku => getProductBySKU(sku));
      const productResults = await Promise.all(productPromises);

      
      // Create a map of SKU to product information
      const productMap = {};
      productResults.forEach((result, index) => {
        if (result && result[0]) {
          productMap[skus[index]] = result[0].node;
        }
      });
      /*console.log("vehicle",vehicle)
      console.log("productResults",productResults)*/
      console.log("productMap",productMap)
      
      let itemsDriver = ""
      if(vehicle["ESCOVA CLASSIC CONDUTOR"] && vehicle["ESCOVA CLASSIC CONDUTOR"] !== ""){
        console.log("ESCOVA CLASSIC CONDUTOR")
        const product = productMap[vehicle["ESCOVA CLASSIC CONDUTOR"]];
        if (product) {
          itemsDriver = product
          
        }
      }

      let itemsPassenger = ""
      if(vehicle["ESCOVA CLASSIC PASSAGEIRO"] && vehicle["ESCOVA CLASSIC PASSAGEIRO"] !== ""){
        console.log("ESCOVA CLASSIC PASSAGEIRO")
        
        const product = productMap[vehicle["ESCOVA CLASSIC PASSAGEIRO"]];
        if (product) {
          itemsPassenger = product
          
        }
      }

      if(itemsDriver !== "" || itemsPassenger !== ""){
        const elem = `
          <div class="category">
            <div class="category-title">Escovas Classic</div>
            <div class="product-cards-container">
              ${itemsDriver !== "" ? `
                <div class="product-card" data-product='${JSON.stringify(itemsDriver)}'>
                  <div class="product-card-header">
                    <h3>Lado do Condutor</h3>
                  </div>
                  <div class="product-card-content">
                    <div class="product-card-image">
                      <img src="${itemsDriver.featuredImage.url}" alt="${itemsDriver.title}" />
                    </div>
                    <div class="product-card-details">
                      <div class="product-title">${itemsDriver.title}</div>
                      <div class="product-sku">
                        <a href="/${itemsDriver.handle}">${itemsDriver.variants.edges[0].node.sku}</a>
                      </div>
                      <div class="product-price d-none">
                        ${itemsDriver.variants.edges[0].node.price.amount} ${itemsDriver.variants.edges[0].node.price.currencyCode}
                      </div>
                    </div>
                  </div>
                  <div class="product-card-footer">
                    <div class="checkbox-container">
                      <input type="checkbox" class="checkbox-wiper-blade" id="checkbox-flat-driver" checked />
                      <label for="checkbox-flat-driver">Selecionar</label>
                    </div>
                  </div>
                </div>` : ""
              }
              ${itemsPassenger !== "" ? `
                <div class="product-card" data-product='${JSON.stringify(itemsPassenger)}'>
                  <div class="product-card-header">
                    <h3>Lado do Passageiro</h3>
                  </div>
                  <div class="product-card-content">
                    <div class="product-card-image">
                      <img src="${itemsPassenger.featuredImage.url}" alt="${itemsPassenger.title}" />
                    </div>
                    <div class="product-card-details">
                      <div class="product-title">${itemsPassenger.title}</div>
                      <div class="product-sku">
                        <a href="/${itemsPassenger.handle}">${itemsPassenger.variants.edges[0].node.sku}</a>
                      </div>
                      <div class="product-price d-none">
                        ${itemsPassenger.variants.edges[0].node.price.amount} ${itemsPassenger.variants.edges[0].node.price.currencyCode}
                      </div>
                    </div>
                  </div>
                  <div class="product-card-footer">
                    <div class="checkbox-container">
                      <input type="checkbox" class="checkbox-wiper-blade" id="checkbox-flat-passenger" checked />
                      <label for="checkbox-flat-passenger">Selecionar</label>
                    </div>
                  </div>
                </div>` : ""
              }
            </div>
            <div class="add-to-cart-container">
              <button class="btn btn-block primary adc adc-custom" id="category-classic">
                Adicionar ao carrinho
              </button>
            </div>
          </div>
        `;

        vehiclesList.append(elem);
      }

      let itemsDriverFlat = ""
      if(vehicle["ESCOVA FLAT CONDUTOR"] && vehicle["ESCOVA FLAT CONDUTOR"] !== ""){
        console.log("ESCOVA FLAT CONDUTOR")
        
        const product = productMap[vehicle["ESCOVA FLAT CONDUTOR"]];
        if (product) {
          itemsDriverFlat = product
          
        }
      }

      let itemsPassengerFlat = ""
      if(vehicle["ESCOVA FLAT PASSAGEIRO"] && vehicle["ESCOVA FLAT PASSAGEIRO"] !== ""){
        console.log("ESCOVA FLAT PASSAGEIRO")
        
        const product = productMap[vehicle["ESCOVA FLAT PASSAGEIRO"]];
        if (product) {
          itemsPassengerFlat = product
          
        }
      }

      console.log("itemsDriverFlat",itemsDriverFlat)
      console.log("itemsPassengerFlat",itemsPassengerFlat)
      
      if(itemsDriverFlat !== "" || itemsPassengerFlat !== ""){
        const elem = `
          <div class="category">
            <div class="category-title">Escovas Flat</div>
            <div class="product-cards-container">
              ${itemsDriverFlat !== "" ? `
                <div class="product-card" data-product='${JSON.stringify(itemsDriverFlat)}'>
                  <div class="product-card-header">
                    <h3>Lado do Condutor</h3>
                  </div>
                  <div class="product-card-content">
                    <div class="product-card-image">
                      <img src="${itemsDriverFlat.featuredImage.url}" alt="${itemsDriverFlat.title}" />
                    </div>
                    <div class="product-card-details">
                      <div class="product-title">${itemsDriverFlat.title}</div>
                      <div class="product-sku">
                        <a href="/${itemsDriverFlat.handle}">${itemsDriverFlat.variants.edges[0].node.sku}</a>
                      </div>
                      <div class="product-price d-none">
                        ${itemsDriverFlat.variants.edges[0].node.price.amount} ${itemsDriverFlat.variants.edges[0].node.price.currencyCode}
                      </div>
                    </div>
                  </div>
                  <div class="product-card-footer">
                    <div class="checkbox-container">
                      <input type="checkbox" class="checkbox-wiper-blade" id="checkbox-flat-driver" checked />
                      <label for="checkbox-flat-driver">Selecionar</label>
                    </div>
                  </div>
                </div>` : ""
              }
              ${itemsPassengerFlat !== "" ? `
                <div class="product-card" data-product='${JSON.stringify(itemsPassengerFlat)}'>
                  <div class="product-card-header">
                    <h3>Lado do Passageiro</h3>
                  </div>
                  <div class="product-card-content">
                    <div class="product-card-image">
                      <img src="${itemsPassengerFlat.featuredImage.url}" alt="${itemsPassengerFlat.title}" />
                    </div>
                    <div class="product-card-details">
                      <div class="product-title">${itemsPassengerFlat.title}</div>
                      <div class="product-sku">
                        <a href="/${itemsPassengerFlat.handle}">${itemsPassengerFlat.variants.edges[0].node.sku}</a>
                      </div>
                      <div class="product-price d-none">
                        ${itemsPassengerFlat.variants.edges[0].node.price.amount} ${itemsPassengerFlat.variants.edges[0].node.price.currencyCode}
                      </div>
                    </div>
                  </div>
                  <div class="product-card-footer">
                    <div class="checkbox-container">
                      <input type="checkbox" class="checkbox-wiper-blade" id="checkbox-flat-passenger" checked />
                      <label for="checkbox-flat-passenger">Selecionar</label>
                    </div>
                  </div>
                </div>` : ""
              }
            </div>
            <div class="add-to-cart-container">
              <button class="btn btn-block primary adc adc-custom" id="category-flat">
                Adicionar ao carrinho
              </button>
            </div>
          </div>
        `;

        $("#loading").hide();
        vehiclesList.append(elem);

        
      }

      $("#product-list-container").css("display", "block");

      // Add to cart functionality
      $("#category-classic").on("click", function() {
        const category = $(this).closest('.category');
        const selectedProducts = [];
        
        category.find('.checkbox-wiper-blade:checked').each(function() {
          const productCard = $(this).closest('.product-card');
          const productData = JSON.parse(productCard.attr('data-product'));
          const variantId = productData.variants.edges[0].node.id;
          selectedProducts.push({
            id: variantId,
            quantity: 1
          });
        });

        if (selectedProducts.length > 0) {
          addToCart(selectedProducts);
        }
      });

      $("#category-flat").on("click", function() {
        const category = $(this).closest('.category');
        const selectedProducts = [];
        
        category.find('.checkbox-wiper-blade:checked').each(function() {
          const productCard = $(this).closest('.product-card');
          const productData = JSON.parse(productCard.attr('data-product'));
          const variantId = productData.variants.edges[0].node.id;
          selectedProducts.push({
            id: variantId,
            quantity: 1
          });
        });

        if (selectedProducts.length > 0) {
          addToCart(selectedProducts);
        }
      });

      // Function to add items to cart
      async function addToCart(items) {
        try {
          // Convert items to the format expected by Shopify's cart API
          const cartItems = items.map(item => ({
            id: item.id,
            quantity: item.quantity
          }));

          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              items: cartItems
            })
          });

          if (!response.ok) {
            throw new Error('Network response was not ok');
          }

          const data = await response.json();
          
          // Redirect to cart page
          window.location.href = '/cart';
          
        } catch (error) {
          console.error("Error:", error);
          alert("Erro ao adicionar ao carrinho. Por favor, tente novamente.");
        }
      }
    })

  });

</script>

<style>
  #product-list-container {
    margin-top: 34px;
    max-width: 745px;
    margin: auto;
    padding: 12px;
  }
  .title {
    font-weight: 600;
  }

  .subtitle {
    color: #4A4A4A;
    font-weight: 400;
    margin: 12px;
  }

  .sku {
    color: #B0B0B0;
    font-weight: 300;
  }

  .products-search-layout {
    max-width: 745px;
    margin: 0 auto 50px auto;
    padding: 12px;
    padding-bottom: 1vh;
    padding-top: 2.5vh;
  }

  #products-list {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 20px;
  }

  @media only screen and (max-width: 600px) {
    #products-list {
      grid-template-columns: 1fr;
    }
  }

  #products-list .vehicle-item {
    width: 100%;
    margin-top: 24px;
    padding: 12px;
    text-align: center;
    overflow: hidden;
  }

  #products-list .vehicle-item img{
    width: 100%;
    object-fit: cover;
  }

  #products-list-2 .category{
    background: white;
    border: 1px solid #d1d1d1;
    padding: 15px;
    margin-bottom: 12px;
  }

  #products-list-2 .category .category-items{
    display: flex;
  }


  #products-list-2 .category .add-to-cart-container{
    display: flex;
    justify-content: flex-end;
    margin-top: 20px;
  }
  #products-list-2 .category .add-to-cart-container .adc-custom{
    width: 190px;
    font-size: 13px;
  }



  #products-list-2 .category .category-title{
    font-size: 20px;
    font-weight: bold;
    padding-bottom: 16px;
    color: #333!important;
  }

  #products-list-2 .category .category-items .category-items-image{
    width: 20%;
    margin-right: 20px;
    object-fit: contain;
  }

  #products-list-2 .category .category-items .category-acessories{
    width: 80%;
  }

  #products-list-2 .category .category-items .category-acessories table{
    width: 100%;
  }

  #products-list-2 .category .category-items .category-acessories tr{
    border-bottom: 1px solid black;
    padding: 10px;
    height: 36px;
  }

  #products-list-2 .category .category-items .category-acessories td a{
    color: #ff9800 !important;
    text-decoration: underline !important;
  }

  @media only screen and (max-width: 600px) {
    
    #products-list-2 .category .category-items{
      flex-direction: column;
    }

    #products-list-2 .category .category-items .category-items-image{
      width: 100%;
      margin-right: 0;
    }

    #products-list-2 .category .category-items .category-acessories{
      width: 100%;
    }

    #product-list-container{
      margin: 0;
      padding: 0;
    }
  }

.main-product-image:hover + .hover-product-image{
  opacity: 1;
  z-index: 9999;
}

.hover-product-image{
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 260px;
  height: 260px;
  transform: translate(-130px, -130px);
  box-shadow: 0 0 24px -10px #e2e2e2;
  transition: all 250ms ease-in-out;
  z-index: -1;
}

@media only screen and (max-width: 600px) {
  .hover-product-image {
    transform: translate(0, -130px);
  }
}

.hover-product-image:hover{
  opacity: 1;
  z-index: 9999;
}

#loading{
  display: none;
  padding: 12px;
  text-align: center;
  margin-bottom: 60px;
}

.product-cards-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin: 20px 0;
}

.product-card {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  overflow: hidden;
  transition: transform 0.2s ease-in-out;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.product-card-header {
  background: #f8f9fa;
  padding: 15px;
  border-bottom: 1px solid #eee;
}

.product-card-header h3 {
  margin: 0;
  color: #333;
  font-size: 18px;
}

.product-card-content {
  padding: 20px;
  display: flex;
  gap: 20px;
}

.product-card-image {
  flex: 0 0 120px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.product-card-image img {
  max-width: 100%;
  height: auto;
  object-fit: contain;
}

.product-card-details {
  flex: 1;
}

.product-title {
  font-weight: 600;
  margin-bottom: 10px;
  color: #333;
}

.product-sku {
  margin-bottom: 10px;
}

.product-sku a {
  color: #ff9800;
  text-decoration: none;
  font-size: 14px;
}

.product-adapter {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  color: #666;
}

.adapter-label {
  font-weight: 500;
}

.product-card-footer {
  padding: 15px;
  border-top: 1px solid #eee;
  background: #f8f9fa;
}

.checkbox-container {
  display: flex;
  align-items: center;
  gap: 8px;
}

.checkbox-container label {
  font-size: 14px;
  color: #666;
  cursor: pointer;
}

.checkbox-wiper-blade {
  width: 18px;
  height: 18px;
  cursor: pointer;
}

@media only screen and (max-width: 600px) {
  .product-cards-container {
    grid-template-columns: 1fr;
  }
  
  .product-card-content {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  
  .product-card-image {
    flex: 0 0 auto;
  }
  
  .product-adapter {
    justify-content: center;
  }
}

</style>

