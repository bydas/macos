<div class="container" id="configurador">
  <header class="page__header row">
    <h1 class="page__title heading h1 col-12">{{ page.title }}</h1>
  </header>

  <div class="page__content rte">
    {{ page.content }}
    
    <div class="form__input-row row mt-5 mb-4">
      <div class="form__input-wrapper col-12 col-md-4 mb-4 mb-md-0">
        <div class="select-wrapper select-wrapper--primary">
          <select name="marca" id="cruz_brands" class="configurador-input">
            <option value="">Marca do Veículo</option>
          </select>
        </div>
      </div>

      <div class="form__input-wrapper col-12 col-md-4" style="display: block;">
        <div class="select-wrapper select-wrapper--primary">
          <select name="modelo" id="cruz_models" class="configurador-input">
            <option value="">Modelo do Veículo</option>
          </select>
        </div>
      </div>

      <div class="form__input-wrapper col-12 col-md-4" style="display: block;">
        <div class="select-wrapper select-wrapper--primary">
          <select name="modelo" id="cruz_bodies" class="configurador-input">
            <option value="">Escolha uma Viatura</option>
          </select>
        </div>
      </div>

      <div id="cruz_solutions"></div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    const endpoint = "https://macos.apps.bydas.com/";
    
    const brandsInput = document.getElementById("cruz_brands");
    const modelsInput = document.getElementById("cruz_models");
    const bodiesInput = document.getElementById("cruz_bodies");
    const solutionsElement = document.getElementById("cruz_solutions");

    if (!brandsInput || !modelsInput || !bodiesInput) return;
    
    let brands = [];
    let models = [];
    let bodies = [];
    let solutions = [];
    
    const getData = async (action, data, request) => {
      await fetch(`${endpoint}?action=${action}`, {
        headers: { "Content-Type": "application/json" }
      })
        .then((res) => {
          if (!res.ok) {
            console.error("Couldn't fetch " + action);
            return null;
          }
  
          return res.json();
        })
        .then((actionData) => {                  
          if (actionData && actionData[request]) {
            if (request === "brands") {
              brands.length = 0;
              models.length = 0;
              bodies.length = 0;
            } else if (request === "models") {
              models.length = 0;
              bodies.length = 0;
            } else {
              bodies.length = 0;
            }
            
            data.push(...actionData[request]);
          }
        })
        .catch((error) => console.error(error))
    }

    await getData("cruz_brands", brands, "brands");
    
    if (brandsInput) {
      for (const brand of brands) {
        const brandOption = document.createElement("option");
        brandOption.value = brand.IdBrand;
        brandOption.innerText = brand.Brand;
        
        brandsInput.appendChild(brandOption);
      }
    }

    brandsInput.addEventListener("change", async function (e) {
      const brandId = e.target.value;
      
      if (brandId) {
        await getData(`cruz_models&IdBrand=${brandId}`, models, "models"); 

        if (modelsInput) {
          const bodyOptions = bodiesInput.querySelectorAll("option");

          for (const bodyOption of bodyOptions) {
            if (bodyOption.value) bodyOption.remove();
          }
          
          const modelOptions = modelsInput.querySelectorAll("option");
  
          for (const modelOption of modelOptions) {
            if (modelOption.value) modelOption.remove();
          }
          
          for (const model of models) {
            const modelOption = document.createElement("option");
            modelOption.value = model.Model;
            modelOption.innerText = model.Model;
            
            modelsInput.appendChild(modelOption);
          }
        }
      } else {
        const bodyOptions = bodiesInput.querySelectorAll("option");

        for (const bodyOption of bodyOptions) {
          if (bodyOption.value) bodyOption.remove();
        }
        
        const modelOptions = modelsInput.querySelectorAll("option");

        for (const modelOption of modelOptions) {
          if (modelOption.value) modelOption.remove();
        }
      }
    }); 

    modelsInput.addEventListener("change", async function (e) {
      const brandId = brandsInput.value;
      const modelId = e.target.value;
      
      if (brandId && modelId) {
        await getData(`cruz_bodies&IdBrand=${brandId}&Model=${modelId}`, bodies, "bodies"); 

        if (bodiesInput) {
          const bodyOptions = bodiesInput.querySelectorAll("option");

          for (const bodyOption of bodyOptions) {
            if (bodyOption.value) bodyOption.remove();
          }
          
          for (const body of bodies) {
            const bodyOption = document.createElement("option");
            bodyOption.value = body.IdVeh;
            bodyOption.innerText = body.Body;
            
            bodiesInput.appendChild(bodyOption);
          }
        }
      } else {
        const bodyOptions = bodiesInput.querySelectorAll("option");

        for (const bodyOption of bodyOptions) {
          if (bodyOption.value) bodyOption.remove();
        }
      }
    });

    bodiesInput.addEventListener("change", async function (e) {
      const bodyId = e.target.value;
      
      if (bodyId) {
        await getData(`cruz_solutions&IdVeh=${bodyId}`, solutions, "vehicles"); 

        const solutionOptions = {};

        for (const solution of solutions) {
          const currentOption = solution.idOption;
          const optionProducts = solutions.filter((s) => s.idOption === currentOption);
          
          if (!solutionOptions[currentOption]) {
            solutionOptions[currentOption] = optionProducts;
          }
        }

        if (solutionsElement) {
          Object.entries(solutionOptions).map(([key, value], index) => {
            const blockElement = document.createElement("div");
            
            const blockTitle = document.createElement("h1");
            blockTitle.innerText = `Opção ${index + 1} - ${value[0].solutionName}`;
            
            const blockComponents = document.createElement("ul");

            [blockTitle, blockComponents].forEach((b) => blockElement.appendChild(b));

            solutionsElement.appendChild(blockElement);
            
            return value.map((s, index) => {
              const component = document.createElement("li");
              
              const title = document.createElement("h3");
              title.innerText = s.product.title;
              
              const sku = document.createElement("a");
              sku.innerText = s.sku;
              sku.href = `/products/${s.product.handle}`;
              
              const price = document.createElement("span");
              price.innerText = s.price;

              const optional = document.createElement("input");
              optional.type = "checkbox";
              optional.checked = s.optional;

              if (!s.optional) optional.disabled = true;

              [title, sku, price, optional].forEach((el) => component.appendChild(el));

              blockComponents.appendChild(component);
            })
          });
          
          // const solutionElementHTML = 
          //  `<div class="card card-configurador mb-4">
          //     <div class="card_header">
          //       <h2 class="card_title"></h2>
          //     </div>
              
          //     <div class="card_section btoption row flex-column flex-lg-row align-items-center justify-content-evenly" style="padding: 0px 20px 30px 20px;">
          //       <img class="col-12 col-lg-3 btoptioni" src="${img}">
                
          //       <div class="btoptiont col-12 col-lg-6">
          //         <table class="tabbt">
          //           <thead>
          //             <tr valign="top">
          //               <th style="width: 240px;"><b>Acessórios</b></th>
          //               <th style="width: 85px; text-align: center;"><b>Ref.</b></th>
          //               <th style="width: 85px; text-align: center;"><b>Preço</b></th>
          //             </tr>
          //           </thead>
                    
          //           <tbody></tbody>
          //         </table>
          //       </div>
                
          //       <div class="btoptionprice col-12 col-lg-3">
          //         <div \${antiroubo0010} class="btbox1">
          //           <p>Total com anti-roubo: <span class="fw-bold"> \${TOTALWITHANTITHIEF}€</span></p>
          //           <input type="checkbox" value="check" onclick=""> Adicionar Anti-Roubo
          //         </div> 
                  
          //         <p></p>
                  
          //         <div class="btbox2">
          //           <p style="margin-top:20px;"><span class="fw-bold">Total:</span><span class="btprice fw-bold" style="" id="opt"> \${TOTALWITHOPTIONS}€</span></p>
                    
          //           <div style="text-align: center;">
          //             <button type="submit" disabled class="product-form__add-button button button-configurador" data-action="add-to-cart" style="height:50px; font-size:14px;">ADICIONAR</button>
          //           </div>
                    
          //           <!--<p class="bt_discount"><span class="fw-bold"> 10% </span> de desconto no carrinho </p>-->
          //         </div>
          //       </div>
          //     </div>
          //   </div>`; 
        }
      }
    });
  });
</script>
