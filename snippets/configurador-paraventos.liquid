<div class="container">
  <header class="page__header row">
    <h1 class="page__title heading h1 col-12">{{ page.title }}</h1>
  </header>

  <div class="page__content rte">
    {{ page.content }}
    <div class="form__input-row row mt-5 mb-4" id="form_input_stuff">
      <div class="form__input-wrapper col-12 col-md-4 mb-4 mb-md-0">
        <div class="select-wrapper select-wrapper--primary">
          <select name="marca" id="marcadocarro" class="configurador-input" data-default="" required="" onChange="brandChanged(event)">
            <option value="">Marca do Veículo</option>
          </select>
        </div>
      </div>

      <div class="form__input-wrapper col-12 col-md-4 mb-4 mb-md-0" style="display: block;">
        <div class="select-wrapper select-wrapper--primary">
          <select name="modelo" id="modelodocarro" class="configurador-input" data-default="" onChange="modelChanged(event)">
            <option value="">Modelo do Veículo</option>
          </select>
        </div>
      </div>
      
      <div class="form__input-wrapper col-12 col-md-4" style="display: block;">
        <div class="select-wrapper select-wrapper--primary">
          <select name="ano" id="anodocarro" class="configurador-input" data-default="" onChange="yearChanged(event)">
            <option value="">Ano do Veículo</option>
          </select>
        </div>
      </div>

      <div class="shipping-estimator__results" style="display: none;"></div>
    </div>

    <div hidden id="optionParaventos">
      <div class="card card-configurador mb-4" id="btoptions">
        <div class="card_header" id="op1">
          <h2 class="card_title heading h3 mb-4 mb-lg-0">Paraventos</h2>
        </div>

        <div id="opt1" class="card_section btoption row justify-content-evenly align-items-center flex-column flex-lg-row" style="padding: 0px 20px 30px 20px;">
          <img class="btoptioni col-12 col-lg-3" src="img0101" height="" width="">
          <div class="btoptiont col-12 col-lg-7">
            <table style="" class="tabbt">
              <thead>
                <tr valign="top">
                  <th style="width: 325px;"><b>Paraventos</b></th>
                  <th style="width: 85px; text-align: center;"><b>Ref.</b></th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td label="Acessórios">nome0</td>
                  <td label="Referência">
                    <p style="text-align:center">
                      <a target="_blank" href="/search?type=product&options[prefix]=last&options[unavailable_products]=last&q=skuskusku0">skuskusku0</a>
                    </p>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
          <div class="btoptionprice col-12 col-lg-2">
            <div class="btbox2">
              <p style="margin-top:20px;">
                <span class="fw-bold">Preço:</span>
                <span class="btprice fw-bold">price1231230€</span>
              </p>
              <div style="text-align: center;">
                <button type="submit" class="product-form__add-button button button--primary button-configurador" data-action="add-to-cart" style="height:50px; font-size:14px;" onclick="handleBuy(0)">
                  BUY
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  var loading = true;
  var cars;
  var selectedBrand;
  var selectedModel;
  var selectedYear;
  var initialParaventos;

  var brandToId;
  var idToBrand;

  var modelToId;
  var idToModel;

  var yearToId;
  var idToYear;

  var opts;

  doMagic();

  function brandChanged(event) {
    const model = document.getElementById('modelodocarro');
    while (model.length > 1) {
      model.remove(1);
    }
    const year = document.getElementById('anodocarro');
    while (year.length > 1) {
      year.remove(1);
    }
    modelToId = {};
    idToModel = {};
    if (cars !== undefined) {
      const sel = cars[event.target.value];
      selectedBrand = event.target.value;
      const url = new URLSearchParams(document.location.search);

      Object.keys(sel).forEach((car, index) => {
        const opt = document.createElement('option');
        opt.value = car;
        opt.textContent = car;
        if (index === Number(url.get('model')) && url.get('model') !== null && loading) {
          opt.selected = true;
        }
        modelToId[car] = index;
        idToModel[index] = car;
        model.appendChild(opt);
      });
    }
    document.getElementById('optionParaventos').outerHTML = initialParaventos;
  }

  function modelChanged(event) {
    const year = document.getElementById('anodocarro');
    while (year.length > 1) {
      year.remove(1);
    }
    if (cars !== undefined) {
      selectedModel = event.target.value;
      const sel = cars[selectedBrand][event.target.value];
      const url = new URLSearchParams(document.location.search);
      yearToId = {};
      idToYear = {};

      Object.keys(sel).forEach((car, index) => {
        const opt = document.createElement('option');
        opt.value = car;
        opt.textContent = car;
        if (index === Number(url.get('year')) && url.get('year') !== null && loading) {
          opt.selected = true;
        }
        yearToId[car] = index;
        idToYear[index] = car;
        year.appendChild(opt);
      });
    }
    document.getElementById('optionParaventos').outerHTML = initialParaventos;
  }

  async function yearChanged(event) {
    selectedYear = event.target.value;
    const car = cars[selectedBrand][selectedModel][selectedYear];
    const requests = { whatIs: [], p: [], image: [] };

    if (car[3]) {
      requests.whatIs.push(['paraventos', 'primary']);
      requests.p.push(getProduct(car[3]));
      requests.image.push(car[4]);
    }

    const ans = await Promise.all(requests.p);
    let paraventosPage = initialParaventos;

    if (ans[0] !== undefined) {
      const vari = ans[0].variants;
      paraventosPage = paraventosPage
        .replace('img0101', ans[0].featured_image ? ans[0].featured_image : 'https://macos-auto.myshopify.com/cdn/shop/files/logo.png?v=1741088326&width=300')
        .replace('nome0', ans[0].title)
        .replace(/skuskusku0/g, vari[0].sku)
        .replace('price1231230', (Number(ans[0].price) / 100).toFixed(2));
      
      if (!ans[0].available) {
        paraventosPage = paraventosPage.replace('BUY', 'esgotado');
      }
      opts = [vari[0].id];
    } else {
      paraventosPage = paraventosPage.replace('id="opt1"', 'hidden');
    }

    document.getElementById('optionParaventos').outerHTML = paraventosPage;
  }

  function getProduct(sku) {
    return new Promise((resolve, reject) => {
      let request = new XMLHttpRequest();
      request.open('GET', '/products/' + sku + '.js', false);
      request.send(null);
      if (request.status === 200) {
        resolve(JSON.parse(request.responseText));
      } else {
        reject(request.status);
      }
    });
  }

  function handleBuy(id) {
    const requestEntrie = [{
      id: opts[id],
      quantity: 1,
    }];

    const request = new XMLHttpRequest();
    request.open('POST', '/cart/add.js');
    request.setRequestHeader('Content-Type', 'application/json');
    request.addEventListener('load', reqListener);
    request.send(JSON.stringify({ items: requestEntrie }));
  }

  function reqListener(env) {
    if (this.status !== 200) {
      alert('artigo esgotado');
    } else {
      const a = window.location.href.split('?')[0] + '?brand=' + brandToId[selectedBrand] + '&model=' + modelToId[selectedModel] + '&year=' + yearToId[selectedYear];
      window.location.href = a;
    }
  }

  function doMagic() {
    httpGet("{{ 'config_chuventos.csv' | asset_url }}", handleData);
  }

  async function httpGet(URL, handler) {
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.addEventListener('load', handler);
    xmlHttp.open('GET', URL);
    xmlHttp.send(null);
  }

  function handleData() {
    const r = this.responseText.split('\n').map((line) => line.split(',').map((value) => value.trim()));
    const ccars = {};
    for (let i = 1; i < r.length; i++) {
      const carr = r[i];
      if (carr[0] === '') continue;
      if (ccars[carr[0]] === undefined) {
        ccars[carr[0]] = {};
      }
      if (ccars[carr[0]][carr[1]] === undefined) {
        ccars[carr[0]][carr[1]] = {};
      }
      if (ccars[carr[0]][carr[1]][carr[2]] === undefined) {
        ccars[carr[0]][carr[1]][carr[2]] = carr;
      }
    }
    cars = ccars;
    const select_elem = document.getElementById('marcadocarro');
    const url = new URLSearchParams(document.location.search);
    brandToId = {};
    idToBrand = {};

    Object.keys(cars).forEach((element, index) => {
      const option_elem = document.createElement('option');
      option_elem.value = element;
      option_elem.textContent = element;
      if (Number(url.get('brand')) === index && url.get('brand') !== null && loading) {
        option_elem.selected = true;
      }
      brandToId[element] = index;
      idToBrand[index] = element;
      select_elem.appendChild(option_elem);
    });

    initialParaventos = document.getElementById('optionParaventos').outerHTML;

    if (url.get('brand')) {
      brandChanged({ target: { value: idToBrand[url.get('brand')] } });
      modelChanged({ target: { value: idToModel[url.get('model')] } });
      yearChanged({ target: { value: idToYear[url.get('year')] } });
    }
    loading = false;
  }
</script>